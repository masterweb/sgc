<?phprequire_once 'config_call.php';class MySQLDatabaseCall {    private $connection;    public $last_query;    private $magic_quotes_active;    private $real_escape_string_exists;    function __construct() {        $this->open_connection();        $this->magic_quotes_active = get_magic_quotes_gpc();        $this->real_escape_string_exists = function_exists("mysql_real_escape_string");    }    public function open_connection() {        $this->connection = mysql_connect('localhost', 'root', 'k143c89?4Fg&2');        if (!$this->connection) {            die("Falla en la conexion a la base de datos: " . mysql_error());        } else {            $db_select = mysql_select_db('callcenter', $this->connection);            if (!$db_select) {                die("Falla en la seleccion de Base de Datos: " . mysql_error());            }        }    }    public function close_connection() {        if (isset($this->connection)) {            mysql_close($this->connection);            unset($this->connection);        }    }    public function getQueryCall($sql) {        $this->last_query = $sql;        $result = mysql_query($sql, $this->connection);        $this->confirm_query($result);        return $result;    }    // Escapar valores no deseados de las entradas de usuario    public function escape_value($value) {        if ($this->real_escape_string_exists) { // PHP v4.3.0 o mas actual            // deshace cualquier efecto de magic cuote asi entonces mysql_real_escape_string hace su trabajp            if ($this->magic_quotes_active) {                $value = stripslashes($value);            }            $value = mysql_real_escape_string($value);        } else { // antes de PHP v4.3.0            // si no est?n ya magic cuotes a?adirlas manualmente            if (!$this->magic_quotes_active) {                $value = addslashes($value);            }            // si magic quotes esta activo entonces slashes ya existen        }        return $value;    }    // METODOS PARA LA BASE DE DATOS    public function getArray($result_set) {        return mysql_fetch_array($result_set);    }    public function getRows($result_set) {        return mysql_num_rows($result_set);    }    public function insert_id() {        // get the last id inserted over the current db connection        return mysql_insert_id($this->connection);    }    public function affectedRows() {        return mysql_affected_rows($this->connection);    }    private function confirm_query($result) {        if (!$result) {            $output = "Database CALL query failed: " . mysql_error() . "<br /><br />";            //$output .= "Last SQL query: " . $this->last_query;            die($output);        }    }}//$databasec = new MySQLDatabaseCall();//$db =& $databasec;?>